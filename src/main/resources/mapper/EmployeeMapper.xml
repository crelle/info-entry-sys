<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="baseline.app.mapper.EmployeeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="baseline.app.pojo.entity.Employee">
        <id column="id" property="id"/>
        <id column="job_no" property="jobNo"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="age" property="age"/>
        <result column="birthday" property="birthday"/>
        <result column="cell_phone" property="cellPhone"/>
        <result column="email" property="email"/>
        <result column="registered_residence" property="registeredResidence"/>
        <result column="residence" property="residence"/>
        <result column="emergency" property="emergency"/>
        <result column="emergency_telephone" property="emergencyTelephone"/>
        <result column="education" property="education"/>
        <result column="school" property="school"/>
        <result column="school_time" property="schoolTime"/>
        <result column="working_hours" property="workingHours"/>
        <result column="marriage" property="marriage"/>
        <result column="child" property="child"/>
        <result column="certificate" property="certificate"/>
        <result column="hobby" property="hobby"/>
        <result column="skill" property="skill"/>
        <result column="time" property="time"/>
        <result column="project_id" property="projectId"/>
        <result column="post_id" property="postId"/>
        <result column="native_address" property="nativeAddress"/>
        <result column="create_time" property="createTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="enabled" property="enabled"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id
        , name, gender, age, birthday, cell_phone, email, registered_residence, residence, emergency, emergency_telephone, education, school, school_time, working_hours, marriage, child, certificate, hobby, skill, job_no, time, project_id, post_id, native_address, create_time, create_by, update_time, update_by, enabled
    </sql>

    <select id="queryByCondition" resultType="baseline.app.pojo.vo.EmployeeVo">
        SELECT
        *
        FROM
        (SELECT
        e.*,
        dep.id as departmentId,
        dep.name as departmentName,
        reg.id as regionId,
        reg.name as regionName,
        con.id as interfaceId,
        con.name as interfaceName,
        cus.id as customerId,
        cus.name as customerName,
        pro.name as projectName,
        post.name as postName,
        sta.status ,
        sta.create_time statusTime
        FROM
        t_employee e
        LEFT JOIN t_status_record sta ON e.job_no = sta.job_no
        left join t_post post on e.post_id = post.id
        LEFT JOIN t_project pro ON e.project_id = pro.id
        left join t_contact_person_project cpp on cpp.project_id = pro.id
        left join t_contact_person con on cpp.contact_person_id = con.id
        LEFT JOIN t_region reg ON pro.region_id = reg.id
        LEFT JOIN t_department dep ON pro.department_id = dep.id
        LEFT JOIN t_customer cus ON con.customer_id = cus.id
        ORDER BY statusTime DESC
        LIMIT 10000) a
        <where>
            <if test="param.name!=null and param.name!=''">
                and a.name like concat('%',concat(#{param.name},'%'))
            </if>
            <if test="param.departmentId!=null and param.departmentId!=''">
                and a.departmentId = #{param.departmentId}
            </if>
            <if test="param.departmentName!=null and param.departmentName!=''">
                and a.departmentName = #{param.departmentName}
            </if>
            <if test="param.regionId!=null and param.regionId!=''">
                and a.regionId = #{param.regionId}
            </if>
            <if test="param.regionName!=null and param.regionName!=''">
                and a.regionName = #{param.regionName}
            </if>
            <if test="param.interfaceId!=null and param.interfaceId!=''">
                and a.interfaceId = #{param.interfaceId}
            </if>
            <if test="param.interfaceName!=null and param.interfaceName!=''">
                and a.interfaceName = #{param.interfaceName}
            </if>
            <if test="param.customerId!=null and param.customerId!=''">
                and a.customerId = #{param.customerId}
            </if>
            <if test="param.customerName!=null and param.customerName!=''">
                and a.customerName = #{param.customerName}
            </if>
            <if test="param.projectName!=null and param.projectName!=''">
                and a.projectName = #{param.projectName}
            </if>
            <if test="param.status!=null and param.status!=''">
                and a.status = #{param.status}
            </if>
            <if test="param.postName!=null and param.postName!=''">
                and a.postName = #{param.postName}
            </if>
        </where>
        GROUP BY name
        order by e.update_time desc
    </select>
    <select id="queryByProjectId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_employee
        where
        project_id = #{projectId,jdbcType=VARCHAR}
    </select>
    <select id="queryByPostId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_employee
        where
        post_id = #{postId,jdbcType=VARCHAR}
    </select>

</mapper>
